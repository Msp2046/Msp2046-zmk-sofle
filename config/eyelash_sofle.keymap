#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Layer-0 {
            bindings = <
&kp ESC        &mt EXCL N1  &mt AT_SIGN N2  &mt POUND N3  &mt UNDERSCORE N4  &mt EQUAL NUMBER_5    &trans  &trans  &kp Y   &kp U     &kp I   &kp O     &kp P
&mt LSHFT TAB  &kp Q        &kp W           &kp E         &kp R              &kp T                 &trans  &kp G   &kp H   &kp J     &kp K   &kp L     &kp ENTER
&kp CAPS       &kp A        &kp S           &kp D         &kp F              &kp G                 &trans  &trans  &kp B   &kp N     &kp M   &kp FSLH  &kp RSHFT
&kp LCTRL      &mo 6        &kp Z           &kp X         &kp C              &kp V                 &trans  &trans  &trans  &trans    &trans  &trans    &trans
&trans         &mo 5        &kp LSHFT       &kp LALT      &kp SPACE          &lt 1 LA(V)           &trans  &trans  &trans  &kp BSPC  &mo 1   &trans
            >;

            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp ENTER  &kp N0    &kp N9     &kp N8    &kp N7     &kp N6      &trans  &trans  &trans  &trans   &trans     &trans  &trans
&kp F1     &kp F3    &kp MINUS  &trans    &kp EQUAL  &kp P       &trans  &trans  &trans  &kp DOT  &kp COMMA  &trans  &trans
&trans     &trans    &kp LEFT   &trans    &kp RIGHT  &kp H       &trans  &trans  &trans  &trans   &trans     &trans  &trans
&trans     &trans    &kp I      &trans    &kp O      &kp BSLH    &trans  &trans  &trans  &trans   &trans     &trans  &trans
&trans     &kp LBKT  &trans     &kp RBKT  &kp DEL    &trans      &trans  &trans  &trans  &trans   &trans     &trans
            >;

            display-name = "layer1";
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&kp N1             &kp N2             &kp N3             &kp N4             &kp N5             &kp N6               &trans  &trans  &kp N7  &kp N8  &kp N8  &kp N0  &kp DOT
&kp LS(LA(LC(Q)))  &kp LA(LC(LS(W)))  &kp LA(LS(LC(E)))  &kp LG(E)          &kp LS(LA(LC(R)))  &kp T                &trans  &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&kp LA(LS(LC(A)))  &kp LC(LA(LS(S)))  &kp LA(LS(LC(D)))  &kp LG(D)          &kp LC(LA(LS(F)))  &kp LC(LS(LA(G)))    &trans  &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
&kp LC(LA(LS(Z)))  &kp LS(LA(LC(X)))  &kp LS(LA(LC(C)))  &kp LC(LA(LS(V)))  &kp LC(LA(LS(B)))  &kp LC(LA(LS(N)))    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans             &trans             &trans             &trans             &trans             &trans               &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_6 {
            display-name = "layer_6";
            bindings = <
&kp A   &trans             &trans         &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans             &trans         &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans             &trans         &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans             &trans         &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp RA(RC(RS(A)))  &kp RA(RC(B))  &kp A   &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &kp F11  &kp F12  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        cs {
            if-layers = <6>;
            then-layer = <6>;
        };
    };
};
