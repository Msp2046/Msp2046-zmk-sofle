#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Layer-0 {
            bindings = <
&lt 7 ESC  &kp N1  &kp N2     &kp N3    &kp N4     &kp N5         &trans  &kp N6    &kp N7           &kp N8  &kp N9      &kp N0     &kp BACKSPACE
&kp LSHFT  &kp Q   &kp W      &kp E     &kp R      &kp T          &trans  &kp Y     &kp U            &kp I   &kp O       &kp P      &kp ENTER
&kp CAPS   &kp A   &kp S      &kp D     &kp F      &kp G          &trans  &kp H     &kp J            &kp K   &kp L       &kp FSLH   &kp RSHFT
&kp LCTRL  &mo 6   &kp Z      &kp X     &kp C      &kp V          &trans  &kp B     &kp N            &kp M   &kp DELETE  &kp MINUS  &kp EQUAL
&trans     &mo 5   &kp LSHFT  &kp LALT  &kp SPACE  &lt 1 LA(V)    &trans  &kp LEFT  &kp RIGHT_ARROW  &mo 2   &kp COMMA   &kp DOT
            >;

            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp ENTER  &kp N0  &kp N9          &kp N8  &kp N7                &kp N6                   &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &msc SCRL_UP    &kp F1  &kp F5                &kp P                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &msc SCRL_DOWN  &kp F3  &kp F10               &kp H                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans          &trans  &mt MINUS LEFT_ARROW  &mt EQUAL RIGHT_ARROW    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans          &trans  &trans                &trans                   &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "layer1";
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&kp N1             &kp N2             &kp N3             &kp N4             &kp N5             &kp N6               &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LS(LA(LC(Q)))  &kp LA(LC(LS(W)))  &kp LA(LS(LC(E)))  &kp LG(E)          &kp LS(LA(LC(R)))  &kp T                &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LA(LS(LC(A)))  &kp LC(LA(LS(S)))  &kp LA(LS(LC(D)))  &kp LG(D)          &kp LC(LA(LS(F)))  &kp LC(LS(LA(G)))    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LC(LA(LS(Z)))  &kp LS(LA(LC(X)))  &kp LS(LA(LC(C)))  &kp LC(LA(LS(V)))  &kp LC(LA(LS(B)))  &kp LC(LA(LS(N)))    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans             &trans             &trans             &trans             &trans             &trans               &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_6 {
            display-name = "layer1";
            bindings = <
&trans  &trans  &trans  &kp N7  &kp N8     &kp N9        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp N4  &kp N5     &kp N6        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp N1  &kp N2     &kp N3        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp N0     &kp KP_DOT    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp ENTER  &trans        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &kp F11  &kp F12  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
