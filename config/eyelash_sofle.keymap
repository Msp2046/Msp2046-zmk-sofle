#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Layer-0 {
            bindings = <
&kp ESC         &kp N1  &kp N2     &kp N3    &kp N4     &kp N5    &mmv MOVE_UP     &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp DEL
&mt LSHFT TAB   &kp Q   &kp W      &kp E     &kp R      &kp T     &mmv MOVE_DOWN   &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSPC
&kp CAPS        &kp A   &kp S      &kp D     &kp F      &kp G     &mmv MOVE_LEFT   &kp H   &kp J   &kp K      &kp L     &kp UP    &kp ENTER
&kp LCTRL       &mo 6   &kp Z      &kp X     &kp C      &kp V     &mmv MOVE_RIGHT  &kp B   &kp N   &kp M      &kp LEFT  &kp DOWN  &kp RIGHT
&bt BT_CLR_ALL  &mo 5   &kp LSHFT  &kp LALT  &kp SPACE  &mo 1     &mkp LCLK        &trans  &mo 5   &kp RSHFT  &trans    &trans
            >;

            display-name = "LAYER0";
            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        layer_1 {
            bindings = <
&kp ENTER  &kp N0     &kp N9     &kp N8     &kp N7     &kp N6      &trans  &kp N7  &kp N8   &kp N9     &kp MINUS  &kp EQUAL  &kp BSPC
&kp BSPC   &kp DOT    &kp UP     &kp MINUS  &kp EQUAL  &kp P       &trans  &kp N4  &kp N5   &kp N6     &kp LBKT   &kp RBKT   &kp BSLH
&kp DEL    &kp LEFT   &kp DOWN   &kp RIGHT  &mt F3 F1  &kp H       &trans  &kp N1  &kp N2   &kp N3     &kp SEMI   &kp APOS   &kp ENTER
&kp LC(N)  &kp LC(O)  &kp I      &kp LC(M)  &kp O      &kp BSLH    &trans  &kp N0  &kp DOT  &kp ENTER  &kp COMMA  &kp DOT    &kp FSLH
&trans     &kp LBKT   &kp LC(E)  &kp RBKT   &kp F10    &trans      &trans  &trans  &trans   &kp RSHFT  &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&kp N1             &kp N2             &kp N3             &kp N4             &kp N5             &kp N6               &trans  &trans  &trans   &trans     &trans  &trans  &trans
&kp LS(LA(LC(Q)))  &kp LA(LC(LS(W)))  &kp LA(LS(LC(E)))  &kp LG(E)          &kp LS(LA(LC(R)))  &kp LA(LC(LS(T)))    &trans  &trans  &trans   &trans     &trans  &trans  &trans
&kp LA(LS(LC(A)))  &kp LC(LA(LS(S)))  &kp LA(LS(LC(D)))  &kp LG(D)          &kp LC(LA(LS(F)))  &kp LG(L)            &trans  &trans  &kp DOT  &kp COMMA  &trans  &trans  &trans
&kp LC(LA(LS(Z)))  &kp LS(LA(LC(X)))  &kp LS(LA(LC(C)))  &kp LC(LA(LS(V)))  &kp LC(LA(LS(B)))  &kp LC(LA(LS(N)))    &trans  &trans  &trans   &trans     &trans  &trans  &trans
&trans             &trans             &trans             &trans             &trans             &trans               &trans  &trans  &trans   &trans     &trans  &trans
            >;

            label = "Maya";
        };

        layer_6 {
            display-name = "layer_6_Yingpin";
            bindings = <
&kp LS(LA(LC(F1)))  &kp LA(LC(LS(F2)))  &kp LS(LA(LC(F3)))  &kp LA(LC(LS(F4)))   &kp LC(LA(LS(F5)))   &kp LS(LC(LA(F6)))     &trans  &kp F7   &kp F8   &kp F9   &trans  &trans  &trans
&kp LS(LC(LA(F7)))  &kp LS(LA(LC(F8)))  &kp LA(LC(LS(F9)))  &kp LC(LA(LS(F10)))  &kp LS(LC(LA(F11)))  &kp LS(LC(LA(F12)))    &trans  &kp F4   &kp F5   &kp F6   &trans  &trans  &trans
&kp LS(LC(LA(Q)))   &kp LA(LC(LS(W)))   &msc SCRL_UP        &kp LS(LC(LA(R)))    &kp LA(LC(LS(T)))    &kp LC(LS(LA(Y)))      &trans  &kp F1   &kp F2   &kp F3   &trans  &trans  &trans
&kp LS(LA(LC(U)))   &kp LS(LA(LC(I)))   &msc SCRL_DOWN      &kp LS(LC(LA(O)))    &kp LA(LS(LC(P)))    &kp LS(LA(LC(A)))      &trans  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans
&trans              &kp LA(LC(LS(S)))   &kp LS(LA(LC(D)))   &kp LS(LC(LA(F)))    &kp LC(LA(LS(G)))    &kp LS(LA(LC(H)))      &trans  &trans   &trans   &trans   &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
